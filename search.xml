<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在小程序中使用svg字体图标</title>
      <link href="/2022/11/15/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8svg%E5%9B%BE%E6%A0%87/"/>
      <url>/2022/11/15/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8svg%E5%9B%BE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1 id="在小程序中使用svg字体图标"><a href="#在小程序中使用svg字体图标" class="headerlink" title="在小程序中使用svg字体图标"></a>在小程序中使用svg字体图标</h1><p>第一步：首先在阿里巴巴矢量图库<a href="https://www.iconfont.cn/search">https://www.iconfont.cn/search</a> 里面下载你想要的小图标：<br><img src="https://pic.imgdb.cn/item/637332a016f2c2beb1166b2e.png"><br><img src="https://pic.imgdb.cn/item/637332a816f2c2beb116743e.png"><br>第二步：打开 <a href="https://icomoon.io/">https://icomoon.io</a> 把你刚刚下载的svg拖拽到这里：<br><img src="https://pic.imgdb.cn/item/637332b316f2c2beb1167e42.png"><br><img src="https://pic.imgdb.cn/item/6373330216f2c2beb116ceb4.png"><br><img src="https://pic.imgdb.cn/item/637332bc16f2c2beb11686f5.png"><br>第三步：在线转换base64编码字体，打开 <a href="https://transfonter.org/">https://transfonter.org/</a> ：<br><img src="https://pic.imgdb.cn/item/637332d116f2c2beb1169d55.png"><br>下载完成后你会得到第二个文件夹，解压：<br><img src="https://pic.imgdb.cn/item/637332c216f2c2beb1168d3f.png"><br>接下来就可以使用了：<br>注意： 字体图标就相当于字体直接用font-size控制大小，color控制颜色就可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// wxml结构文件:&lt;view class=&quot;icon-copy&quot;&gt;&lt;/view&gt;</span><br><span class="line">// wxss样式文件：</span><br><span class="line">.icon-copy &#123;font-size: 30px;color: #000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/637332c716f2c2beb11692aa.png"></p>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）</title>
      <link href="/2022/11/15/%E5%AE%9E%E7%8E%B0%E7%B1%BB%E4%BC%BCkeep-alive%E6%95%88%E6%9E%9C%EF%BC%88%E4%BB%8E%E5%88%97%E8%A1%A8%E9%A1%B5%E8%BF%9B%E5%85%A5%E8%AF%A6%E6%83%85%E9%A1%B5%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%88%97%E8%A1%A8%E9%A1%B5%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BD%8D%E7%BD%AE%E4%B8%8D%E5%8F%98%EF%BC%89/"/>
      <url>/2022/11/15/%E5%AE%9E%E7%8E%B0%E7%B1%BB%E4%BC%BCkeep-alive%E6%95%88%E6%9E%9C%EF%BC%88%E4%BB%8E%E5%88%97%E8%A1%A8%E9%A1%B5%E8%BF%9B%E5%85%A5%E8%AF%A6%E6%83%85%E9%A1%B5%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%88%97%E8%A1%A8%E9%A1%B5%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BD%8D%E7%BD%AE%E4%B8%8D%E5%8F%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="uniapp-实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）"><a href="#uniapp-实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）" class="headerlink" title="uniapp 实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）"></a>uniapp 实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）</h1><p><img src="https://pic.imgdb.cn/item/6373288c16f2c2beb106ef22.png"><br>uniapp的页面生命周期函数onPageScroll可以拿到滚动距离的值</p><h2 id="将列表页滚动的距离scrollTop值-存到data中"><a href="#将列表页滚动的距离scrollTop值-存到data中" class="headerlink" title="将列表页滚动的距离scrollTop值 存到data中"></a>将列表页滚动的距离scrollTop值 存到data中</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onPageScroll : function(e) &#123; </span><br><span class="line">    this.scrollTop = e.scrollTop; </span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="在点击跳转详情的方法中，将scrollTop值存缓存"><a href="#在点击跳转详情的方法中，将scrollTop值存缓存" class="headerlink" title="在点击跳转详情的方法中，将scrollTop值存缓存"></a>在点击跳转详情的方法中，将scrollTop值存缓存</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">toDetail(id) &#123;</span><br><span class="line">   uni.setStorage(&#123;</span><br><span class="line">    key:&quot;listTop&quot;,</span><br><span class="line">    data:this.scrollTop</span><br><span class="line">   &#125;)</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="返回列表页时，在onShow中使用uni-pageScrollTo-将缓存的scrollTop值渲染到页面上。"><a href="#返回列表页时，在onShow中使用uni-pageScrollTo-将缓存的scrollTop值渲染到页面上。" class="headerlink" title="返回列表页时，在onShow中使用uni.pageScrollTo 将缓存的scrollTop值渲染到页面上。"></a>返回列表页时，在onShow中使用uni.pageScrollTo 将缓存的scrollTop值渲染到页面上。</h2><p><img src="https://pic.imgdb.cn/item/6373286f16f2c2beb106c9a9.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">onShow() &#123;</span><br><span class="line">//滚动条</span><br><span class="line">  uni.getStorage(&#123;</span><br><span class="line">     key:&quot;listTop&quot;,</span><br><span class="line">     success: (res) =&gt; &#123;</span><br><span class="line">      if(!isNaN(res.data))&#123;</span><br><span class="line">      var lefts = uni.pageScrollTo(&#123;</span><br><span class="line">        scrollTop:res.data,</span><br><span class="line">        duration:0</span><br><span class="line">      &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="列表页面关闭时将scrollTop值清空"><a href="#列表页面关闭时将scrollTop值清空" class="headerlink" title="列表页面关闭时将scrollTop值清空"></a>列表页面关闭时将scrollTop值清空</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onUnload() &#123;</span><br><span class="line">    uni.setStorage(&#123;</span><br><span class="line">    key:&quot;listTop&quot;,</span><br><span class="line">    data:0</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> uniapp遇见的一些问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo增添公告栏计时器小部件</title>
      <link href="/2022/11/11/Hexo%E5%A2%9E%E6%B7%BB%E5%85%AC%E5%91%8A%E6%A0%8F%E8%AE%A1%E6%97%B6%E5%99%A8%E5%B0%8F%E9%83%A8%E4%BB%B6/"/>
      <url>/2022/11/11/Hexo%E5%A2%9E%E6%B7%BB%E5%85%AC%E5%91%8A%E6%A0%8F%E8%AE%A1%E6%97%B6%E5%99%A8%E5%B0%8F%E9%83%A8%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo增添公告栏计时器小部件"><a href="#Hexo增添公告栏计时器小部件" class="headerlink" title="Hexo增添公告栏计时器小部件"></a>Hexo增添公告栏计时器小部件</h1><p>本问将介绍如何在公告栏增加计时器小部件，效果如下图所示：<br>    <img src="https://pic1.imgdb.cn/item/636df3d616f2c2beb1b049e5.jpg"></p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>在\source\js目录下创建一个timing.js文件，并将如下代码写入该文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">let oSpan = document.getElementsByTagName(&quot;timing&quot;)[0];</span><br><span class="line">let localhostTime = new Date();//获取页面打开的时间</span><br><span class="line">function tow(n) &#123;</span><br><span class="line">    return n &gt;= 0 &amp;&amp; n &lt; 10 ? &#x27;0&#x27; + n : &#x27;&#x27; + n;</span><br><span class="line">&#125;</span><br><span class="line">setInterval(function () &#123;</span><br><span class="line">    let goTime = new Date();//获取动态时间</span><br><span class="line">    let diffTime = goTime.getTime() - localhostTime.getTime();</span><br><span class="line">    var second = Math.floor(diffTime / 1000);//未来时间距离现在的秒数</span><br><span class="line">    var day = Math.floor(second / 86400);//整数部分代表的是天；一天有24*60*60=86400秒 ；</span><br><span class="line">    second = second % 86400;//余数代表剩下的秒数；</span><br><span class="line">    var hour = Math.floor(second / 3600);//整数部分代表小时；</span><br><span class="line">    second %= 3600; //余数代表 剩下的秒数；</span><br><span class="line">    var minute = Math.floor(second / 60);</span><br><span class="line">    second %= 60;</span><br><span class="line">    // var str = tow(day) + &#x27;&lt;span class=&quot;time&quot;&gt;天&lt;/span&gt;&#x27;</span><br><span class="line">    //     + tow(hour) + &#x27;&lt;span class=&quot;time&quot;&gt;小时&lt;/span&gt;&#x27;</span><br><span class="line">    //     + tow(minute) + &#x27;&lt;span class=&quot;time&quot;&gt;分钟&lt;/span&gt;&#x27;</span><br><span class="line">    //     + tow(second) + &#x27;&lt;span class=&quot;time&quot;&gt;秒&lt;/span&gt;&#x27;;</span><br><span class="line">    var str = tow(hour) + &#x27;&lt;span class=&quot;time&quot;&gt;小时&lt;/span&gt;&#x27;</span><br><span class="line">        + tow(minute) + &#x27;&lt;span class=&quot;time&quot;&gt;分钟&lt;/span&gt;&#x27;</span><br><span class="line">        + tow(second) + &#x27;&lt;span class=&quot;time&quot;&gt;秒&lt;/span&gt;&#x27;;</span><br><span class="line">    oSpan.innerHTML = &quot;您已浏览网页&quot; + str;</span><br><span class="line">&#125;, 1000)</span><br></pre></td></tr></table></figure><p>找到主题配置文件_config.butterfly.yml，在inject的bottom处引入该js文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bottom:</span><br><span class="line">- &lt;script src=&quot;/js/timing.js&quot;&gt;&lt;/script&gt; # 公告栏计时器插件</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重新部署，启动，就可以看到效果啦</p>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决hexo开启懒加载后图片无法立即显示的问题</title>
      <link href="/2022/11/11/%E8%A7%A3%E5%86%B3hexo%E5%BC%80%E5%90%AF%E6%87%92%E5%8A%A0%E8%BD%BD%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E7%AB%8B%E5%8D%B3%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/11/11/%E8%A7%A3%E5%86%B3hexo%E5%BC%80%E5%90%AF%E6%87%92%E5%8A%A0%E8%BD%BD%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E7%AB%8B%E5%8D%B3%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="解决了hexo开启懒加载后图片无法立即显示的问题"><a href="#解决了hexo开启懒加载后图片无法立即显示的问题" class="headerlink" title="解决了hexo开启懒加载后图片无法立即显示的问题"></a>解决了hexo开启懒加载后图片无法立即显示的问题</h1><p>本文主要介绍hexo-lazyload-image插件引发的bug以及相关API</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>最近在折腾hexo搭建的个人主页 的时候，遇到了这样一个 bug：</p><p>网站开启图片懒加载后，首次加载页面图片不显示，但是刷新一次后会显示。</p><p>我的插件版本是：hexo-lazyload-image 。</p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>笔者为了提升网页的浏览体验，开启了pjax优化，其原理在于pjax封装了ajax实现局部刷新，将网站变成了单页面应用。</p><p>懒加载插件如果配置不当，将与pjax插件发生冲突，导致以上bug。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>找到hexo项目的根目录下的站点配置文件_config.yml，具体路径：blog&#x2F;_config.yml，其中blog是你的项目文件夹。</p><p>找到lazyload配置，添上isSPA: true字段即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: true</span><br><span class="line">  onlypost: false # optional</span><br><span class="line">  loadingImg: # optional eg ./images/loading.gif</span><br><span class="line">  isSPA: true # optional</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>onlypost<br>   true：只有路由页面或者文章的图片才会被懒加载。<br>   false：除了站点背景图（如果有的话），整个站点的图片均会被懒加载。</li><li>loadingImg：指定的话，加载自定义路径的图片用作文章图片加载时显示，不指定的话显示默认图片。</li><li>isSPA<br>  true：针对单页面应用，当滚动条滚动到图片位置时就会向后端请求图片<br>   false：刷新才能请求图片</li><li>preloadRatio：在多少倍的可见区域时触发图片请求，默认为1，即当前屏幕的区域。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Qexo - 一个快速、强大、漂亮的在线 Hexo 编辑器</title>
      <link href="/2022/11/11/qexo-use/"/>
      <url>/2022/11/11/qexo-use/</url>
      
        <content type="html"><![CDATA[<h1 id="第一次使用markdown"><a href="#第一次使用markdown" class="headerlink" title="第一次使用markdown"></a>第一次使用markdown</h1><p>Qexo 是一个快速、强大、漂亮的在线 Hexo 编辑器</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>Github 开源仓库：<a href="https://github.com/am-abudu/Qexo">https://github.com/am-abudu/Qexo</a><br>Wiki：<a href="https://github.com/am-abudu/Qexo/wiki">https://github.com/am-abudu/Qexo/wiki</a></p><h2 id="特色功能"><a href="#特色功能" class="headerlink" title="特色功能"></a>特色功能</h2><ul><li>自定义图床上传图片</li><li>在线配置编辑</li><li>在线文章管理</li><li>在线页面管理</li><li>较为完善的缓存功能</li><li>Webhook 清除缓存</li><li>自动检查更新</li><li>实验性的在线更新</li><li>开放的 API</li></ul><h2 id="无服务器部署"><a href="#无服务器部署" class="headerlink" title="无服务器部署"></a>无服务器部署</h2><h3 id="申请-MongoDB"><a href="#申请-MongoDB" class="headerlink" title="申请 MongoDB"></a>申请 MongoDB</h3><p>注册 MongoDB 账号 创建免费 MongoDB 数据库，区域推荐选择 AWS &#x2F; N.<br>Virginia (us-east-1) 在 Clusters 页面点击 CONNECT，按步骤设置允许所有 IP 地址的连接），创建数据库用户，并记录数据库连接信息，密码即为你所设置的值<br><img src="https://bu.dusays.com/2021/11/09/6fd9e2a69e8bc.png"></p><h3 id="Fork-本项目"><a href="#Fork-本项目" class="headerlink" title="Fork 本项目"></a>Fork 本项目</h3><p>打开 qexo项目主页 点击 Fork 将项目复刻到您的账户下</p><h3 id="创建-Vercel-项目"><a href="#创建-Vercel-项目" class="headerlink" title="创建 Vercel 项目"></a>创建 Vercel 项目</h3><p>打开 Vercel 注册账号并绑定 Github 新建一个项目并绑定 Fork 的仓库</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>在项目部署界面添加环境变量 Environment Variables</p><p>点击 Deploy 开始部署，若没有 Error 信息即可打开域名进入初始化引导</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="什么是-API-密钥"><a href="#什么是-API-密钥" class="headerlink" title="什么是 API 密钥"></a>什么是 API 密钥</h3><p>在您完成初始化之后可在设置界面修改&#x2F;创建 API 密钥，用于 Webhook 中的身份验证。若留空系统会随机生成一个 API 密钥</p><h3 id="Webhook-是什么"><a href="#Webhook-是什么" class="headerlink" title="Webhook 是什么"></a>Webhook 是什么</h3><p>Qexo 中的 Webhook 指 &#x2F;api&#x2F;webhook 用于自动化操作，目前可用于自动清除缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Ace</span><br><span class="line">Argon-Dashboard-Django</span><br><span class="line">Bootstrap</span><br><span class="line">Bootstrap-Notify</span><br><span class="line">Django</span><br><span class="line">Djongo</span><br><span class="line">HexoPlusPlus</span><br><span class="line">jQuery</span><br><span class="line">Vercel-Python-WSGI</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/01/hello-world/"/>
      <url>/2022/11/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
