<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>js中使用filiter去重</title>
      <link href="/2022/11/25/js%E4%B8%AD%E4%BD%BF%E7%94%A8filiter%E5%8E%BB%E9%87%8D/"/>
      <url>/2022/11/25/js%E4%B8%AD%E4%BD%BF%E7%94%A8filiter%E5%8E%BB%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="js中使用filiter去重"><a href="#js中使用filiter去重" class="headerlink" title="js中使用filiter去重"></a>js中使用filiter去重</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function unique(arr) &#123;</span><br><span class="line">  return arr.filter(function(item, index, arr) &#123;</span><br><span class="line">    //当前元素，在原始数组中的第一个索引==当前索引值，否则返回当前元素</span><br><span class="line">    return arr.indexOf(item, 0) === index;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">var arr = [1,1,&#x27;RUNOOB&#x27;,&#x27;RUNOOB&#x27;,true,true,15];</span><br><span class="line">console.log(unique(arr))</span><br><span class="line">// [1, &quot;RUNOOB&quot;, true, 15]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var arr = [&#x27;apple&#x27;,&#x27;strawberry&#x27;,&#x27;banana&#x27;,&#x27;pear&#x27;,&#x27;apple&#x27;,&#x27;orange&#x27;,&#x27;orange&#x27;,&#x27;strawberry&#x27;]</span><br><span class="line"> var temp_arr = arr.filter(function (element, index, self) &#123;</span><br><span class="line">      return self.indexOf(element) === index</span><br><span class="line">    &#125;)</span><br><span class="line"> console.log(temp_arr)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端实现模糊查询效果</title>
      <link href="/2022/11/25/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E6%95%88%E6%9E%9C/"/>
      <url>/2022/11/25/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="前端实现模糊查询效果"><a href="#前端实现模糊查询效果" class="headerlink" title="前端实现模糊查询效果"></a>前端实现模糊查询效果</h2><p>话不多说，直接上代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;safetyInfo&quot;&gt;</span><br><span class="line">        &lt;el-input placeholder=&quot;请输入&quot;</span><br><span class="line">                       v-model=&quot;search&quot;</span><br><span class="line">                       @input=&quot;submitFun&quot;</span><br><span class="line">                       ref=&#x27;searchInput&#x27;&gt;&lt;/el-input&gt;</span><br><span class="line"> </span><br><span class="line">        &lt;ul v-for=&quot;(list,index) in searchData&quot;</span><br><span class="line">            :key=&quot;index&quot;&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &lt;span&gt;&#123;&#123;list.phoneName&#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;span&gt;&#123;&#123;list.ascriptionPhone&#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;HelloWorld&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            search: &#x27;&#x27;,</span><br><span class="line">            searchData: &#x27;&#x27;,</span><br><span class="line">            products: [</span><br><span class="line">                //假数据</span><br><span class="line">                &#123;</span><br><span class="line">                    &#x27;ascriptionPhone&#x27;: &#x27;17000000000&#x27;,</span><br><span class="line">                    &#x27;phoneName&#x27;: &#x27;张三&#x27;,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    &#x27;ascriptionPhone&#x27;: &#x27;18000000000&#x27;,</span><br><span class="line">                    &#x27;phoneName&#x27;: &#x27;李四&#x27;,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    &#x27;ascriptionPhone&#x27;: &#x27;18000000000&#x27;,</span><br><span class="line">                    &#x27;phoneName&#x27;: &#x27;王麻子&#x27;,</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    created () &#123;</span><br><span class="line">        this.inintData();</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        inintData() &#123;</span><br><span class="line">            this.searchData = this.products;</span><br><span class="line">        &#125;,</span><br><span class="line">        submitFun() &#123;</span><br><span class="line">            </span><br><span class="line">            let search = this.search;</span><br><span class="line">            this.searchData = this.products.filter(function (product) &#123;</span><br><span class="line">                console.log(&#x27;过滤&#x27;, product);</span><br><span class="line">                let searchField = &#123; phoneName: product.phoneName, ascriptionPhone: product.ascriptionPhone &#125;;</span><br><span class="line">                return Object.keys(searchField).some(function (key) &#123;</span><br><span class="line">                    console.log(&#x27;key值&#x27;, key);</span><br><span class="line">                    return String(product[key]).toLowerCase().indexOf(search) &gt; -1;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Electron+vue搭建项目</title>
      <link href="/2022/11/24/Electron-vue%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/11/24/Electron-vue%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近公司想要开发一款桌面应用，在众多的跨平台桌面框架中，我选择了electron，主要的原因是electron使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用程序。相对于其他桌面应用框架，electron相对于前端来说上手起来比较简单。因为之前的技术栈大部分用的Vue.js，所以想采用vue + electron的方式快速迁移之前的项目。</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>查阅了很多资料，我总结了以下几种方式进行融合。</p><ul><li>1、electron-quick-start + vue</li><li>2、vue cli + electron</li><li>3、vue-electron</li><li>4、quasar + electron</li><li>5、vue-cli + vue-cli-plugin-electron-builder</li></ul><h3 id="一、electron-quick-start-vuecli"><a href="#一、electron-quick-start-vuecli" class="headerlink" title="一、electron-quick-start + vuecli"></a>一、electron-quick-start + vuecli</h3><p>在electron官网中提供一个快速创建electron 项目的模板<a href="https://"></a><a href="https://github.com/electron/electron-quick-start">https://github.com/electron/electron-quick-start</a><br><img src="https://pic.imgdb.cn/item/637f387316f2c2beb1cf2183.png"></p><ol><li>clone 模板到本地</li><li>使用npm install安装包（electron安装缓慢，后续更新教程）</li><li>使用npm run start 就可以启动项目，测试是否安装成功<br><img src="https://pic.imgdb.cn/item/637f386116f2c2beb1cf0cf5.png"></li><li>使用vue-cli创建一个vue项目，然后打包到dist 目录下</li><li>修改main.js中加载页面的路径 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mainWindow.loadFile(&#x27;dist/index.html&#x27;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="二、vue-cli-electron"><a href="#二、vue-cli-electron" class="headerlink" title="二、vue cli + electron"></a>二、vue cli + electron</h3><p>这个方法和第一个方法其实很相似，就是将第一种方法反过来用</p><ol><li>使用vue cli 创建一个vue 项目</li><li>使用 npm install –save-dev electron electron-packager安装包</li><li>在根目录中添加一个render.js</li><li>修改package.json 的入口 main: “render.js”</li><li>添加启动命令 “electron:serve”: “vue-cli-service electron:serve”</li><li>在render.js 中加载路径改为 mainWindow.loadURL(“<a href="http://localhost:8080&quot;">http://localhost:8080&quot;</a>)</li></ol><h3 id="三、vue-electron"><a href="#三、vue-electron" class="headerlink" title="三、vue-electron"></a>三、vue-electron</h3><ol><li><p>首先需要安装npm install -g vue-cli<br>  如果你已经安装了vue-cli3.0+，请使用npm install -g @vue&#x2F;cli-init拉取旧模板</p></li><li><p>使用vue init simulatedgreg&#x2F;electron-vue my-project，配置好相关信息<br><img src="https://pic.imgdb.cn/item/637f389816f2c2beb1cf4b3b.png"></p></li><li><p>cd my-project 进入到项目</p></li><li><p>yarn 安装包</p></li><li><p>yarn run dev 启动项目<br><img src="https://pic.imgdb.cn/item/637f38b316f2c2beb1cf6662.png"></p></li></ol><h3 id="四、quasar-electron"><a href="#四、quasar-electron" class="headerlink" title="四、quasar + electron"></a>四、quasar + electron</h3><p>这个方法使用的是quasar框架</p><ol><li>npm install -g @quasar&#x2F;cli 安装quasar脚手架</li><li>quasar create <folder_name> 创建一个工程</li><li>quasar mode add electron添加electron 模式</li><li>quasar build -m electron 打包</li></ol><h3 id="五、vue-cli-vue-cli-plugin-electron-builder-我使用的方法"><a href="#五、vue-cli-vue-cli-plugin-electron-builder-我使用的方法" class="headerlink" title="五、vue-cli + vue-cli-plugin-electron-builder (我使用的方法)"></a>五、vue-cli + vue-cli-plugin-electron-builder (我使用的方法)</h3><p>这个方法使用的是vue-cli 框架</p><ol><li>使用vue cli 创建一个vue 项目 vue create project</li><li>创建好项目，使用vue ui 添加插件 vue-cli-plugin-electron-builder，项目自动生成为electron项目</li><li>使用npm run electron:serve 就可以启动项目</li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Electron-vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在gitee上用git提交项目</title>
      <link href="/2022/11/22/%E5%9C%A8gitee%E4%B8%8A%E7%94%A8git%E6%8F%90%E4%BA%A4%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/11/22/%E5%9C%A8gitee%E4%B8%8A%E7%94%A8git%E6%8F%90%E4%BA%A4%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="首先安装git，注册登录gitee码云。"><a href="#首先安装git，注册登录gitee码云。" class="headerlink" title="首先安装git，注册登录gitee码云。"></a>首先安装git，注册登录gitee码云。</h2><p>main分支：</p><ul><li>新建仓库，开源为公开（其他选项不用管）</li><li>找到你要提交到gitee的项目右键选择Git Bash here。<br><img src="https://pic.imgdb.cn/item/637d790416f2c2beb16bafa8.png"><br>先全局配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;gitee用户名&quot;</span><br><span class="line">git config --global user.email &quot;绑定邮箱&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>首先，如果新项目没有使用过Git的话，险要初始化一下Git，切换到项目目录，终端执行git init即可，下面是三步也是在项目目录下执行的。下面这三步很重要：</li></ul><p>检查项目的状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把所有的文件都添加到暂存区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>在本地提交代码说明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;add files&quot;</span><br></pre></td></tr></table></figure><p>完成上面这三步后，再检查项目的状态，会提示没有文件需要提交了，然后就可以进行下面的操作，将本地仓库的代码提交到云端</p><ul><li>正常情况下是在项目目录下执行如下两行命令：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- gitee项目地址 --&gt;</span><br><span class="line">git remote add origin https://gitee.com/blue-Luckyj/bluelucky.git</span><br><span class="line">&lt;!--  提交到gitee--&gt;</span><br><span class="line">git push -u origin main</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>但执行第一行时可能会报错，error: remote origin already exists.这说明远程仓库已经存在，可能之前自己提交过，那么需要如下操作：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、先输入git remote rm origin 删除关联的origin的远程库</span><br><span class="line">2、关联自己的仓库 git remote add origin https://gitee.com/xxxxxx.git，这里我应该是git remote add origin https://gitee.com/blue-Luckyj/bluelucky.git</span><br><span class="line">3、最后git push -u origin main，这样就推送到自己的仓库了。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>刷新gitee项目所在页面，就可以看到自己提交的代码了</li></ul>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo中引入iconfont自定义图标</title>
      <link href="/2022/11/22/hexo%E4%B8%AD%E5%BC%95%E5%85%A5iconfont%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%87/"/>
      <url>/2022/11/22/hexo%E4%B8%AD%E5%BC%95%E5%85%A5iconfont%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h2 id="新建图标项目"><a href="#新建图标项目" class="headerlink" title="新建图标项目"></a>新建图标项目</h2><ul><li>搜索自己心仪的图标，然后选择添加入库，加到购物车</li><li>选择完毕后点击右上角的购物车图标，打开侧栏，选择添加到项目，如果没有项目就新建一个，如下：<br><img src="https://pic.imgdb.cn/item/637c865416f2c2beb1fc1109.png"></li><li>可以通过上方顶栏菜单 -&gt; 资源管理 -&gt; 我的项目，找到之前添加的图标项目。(现在的 iconfont 可以在图标库的项目设置里直接打开彩色设置，然后采用 fontclass 的引用方式即可使用多彩图标。但是单一项目彩色图标上限是 40 个图标，酌情采用。)<br><img src="https://pic.imgdb.cn/item/637c873c16f2c2beb1fdc0f0.png"><br><img src="https://pic.imgdb.cn/item/637c874916f2c2beb1fdd598.png"></li></ul><h2 id="引入图标"><a href="#引入图标" class="headerlink" title="引入图标"></a>引入图标</h2><ul><li>线上引入方案，我使用的是官方文档中最便捷的 font-class 方案。这一方案偶尔会出现图标加载不出的情况。但是便于随时对图标库进行升级，换一下在线链接即可，适合新手使用。最新版本的 iconfont 支持直接在项目设置中开启彩色图标，从而实现直接用 class 添加多彩色图标。（推荐直接用这个即可）</li><li>在 source\css\custom.css 中填写如下内容，引入 Font-class 的线上资源：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;//at.alicdn.com/t/c/font_3785958_78091558z5o.css&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更推荐在在主题配置文件 inject 配置项进行全局引入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;//at.alicdn.com/t/c/font_3785958_78091558z5o.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span><br><span class="line"> bottom:  </span><br><span class="line">    - &lt;script async src=&quot;//at.alicdn.com/t/c/font_3785958_78091558z5o.js&quot;&gt;&lt;/script&gt; </span><br></pre></td></tr></table></figure><ul><li>可以通过自己的阿里图标库的 font-class 方案查询复制相应的代码<br><img src="https://pic.imgdb.cn/item/637c890b16f2c2beb100adda.png"></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">关于: /about/ || iconfont icon-aixin-copy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo留言板中添加两句诗句</title>
      <link href="/2022/11/21/hexo%E7%95%99%E8%A8%80%E6%9D%BF%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%B8%A4%E5%8F%A5%E8%AF%97%E5%8F%A5/"/>
      <url>/2022/11/21/hexo%E7%95%99%E8%A8%80%E6%9D%BF%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%B8%A4%E5%8F%A5%E8%AF%97%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文将介绍如何增添随机诗词的展示。</p><p>具体效果如下：<br><img src="https://pic.imgdb.cn/item/637aec3616f2c2beb1c036c3.png"></p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>进入留言板文件夹messageboard，编辑index.md文件，添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;poem-wrap&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;poem-border poem-left&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;poem-border poem-right&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;h&gt;念两句诗&lt;/h&gt;</span><br><span class="line">    &lt;p id=&quot;poem&quot;&gt;挑选中...&lt;/p&gt;</span><br><span class="line">    &lt;p id=&quot;info&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    jinrishici.load(function(result) &#123;</span><br><span class="line">      poem.innerHTML = result.data.content</span><br><span class="line">      info.innerHTML = &#x27;【&#x27; + result.data.origin.dynasty + &#x27;】&#x27; + result.data.origin.author + &#x27;《&#x27; + result.data.origin.title + &#x27;》&#x27;</span><br><span class="line">      document.getElementById(&quot;poem&quot;).value(poem);</span><br><span class="line">      document.getElementById(&quot;info&quot;).value(info);  </span><br><span class="line">  &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在\themes\butterfly\source\css\ancientPoetry.css中添加以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">/*诗*/</span><br><span class="line">.poem-wrap &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 730px;</span><br><span class="line">    max-width: 80%;</span><br><span class="line">    border: 2px solid #797979;</span><br><span class="line">    border-top: none;</span><br><span class="line">    text-align: center;</span><br><span class="line">    margin: 80px auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-wrap h &#123;</span><br><span class="line">    font-size: 40px;</span><br><span class="line">    font-style:oblique;</span><br><span class="line">    position: relative;</span><br><span class="line">    margin-top: -40px;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    letter-spacing: 4px;</span><br><span class="line">    color: #797979</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-wrap p &#123;</span><br><span class="line">    width: 70%;</span><br><span class="line">    margin: auto;</span><br><span class="line">    line-height: 30px;</span><br><span class="line">    color: #797979;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-wrap p#poem &#123;</span><br><span class="line">    font-size: 22px;</span><br><span class="line">    margin: 15px auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-wrap p#info &#123;</span><br><span class="line">    font-size: 15px;</span><br><span class="line">    margin: 15px auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-border &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    height: 2px;</span><br><span class="line">    width: 27%;</span><br><span class="line">    background-color: #797979;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-right &#123;</span><br><span class="line">    right: 0;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-left &#123;</span><br><span class="line">    left: 0;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">@media (max-width: 685px) &#123;</span><br><span class="line">    .poem-border &#123;</span><br><span class="line">        width: 18%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">@media (max-width: 500px) &#123;</span><br><span class="line">    .poem-wrap &#123;</span><br><span class="line">        margin-top: 60px;</span><br><span class="line">        margin-bottom: 20px;</span><br><span class="line">        border-top: 2px solid #797979;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    .poem-wrap h &#123;</span><br><span class="line">        margin: 20px 6px;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    .poem-border &#123;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>找到主题配置文件_config.butterfly.yml，在inject位置head中添加留言页面的样式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">     - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/background.css&quot;&gt;</span><br><span class="line">     - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/ancientPoetry.css&quot;&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重新部署，就可以看到效果啦。</p>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中实现前端语言国际化i18n</title>
      <link href="/2022/11/17/vue%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E8%AF%AD%E8%A8%80%E5%9B%BD%E9%99%85%E5%8C%96i18n/"/>
      <url>/2022/11/17/vue%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E8%AF%AD%E8%A8%80%E5%9B%BD%E9%99%85%E5%8C%96i18n/</url>
      
        <content type="html"><![CDATA[<h2 id="先现在项目中安装vue-i18n的依赖"><a href="#先现在项目中安装vue-i18n的依赖" class="headerlink" title="先现在项目中安装vue-i18n的依赖"></a>先现在项目中安装vue-i18n的依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-i18n --save</span><br></pre></td></tr></table></figure><h2 id="在src下建一个lang的文件夹-并且在其下面建一个index-js文件-然后在里面写如下代码"><a href="#在src下建一个lang的文件夹-并且在其下面建一个index-js文件-然后在里面写如下代码" class="headerlink" title="在src下建一个lang的文件夹,并且在其下面建一个index.js文件,然后在里面写如下代码"></a>在src下建一个lang的文件夹,并且在其下面建一个index.js文件,然后在里面写如下代码</h2><figure class="highlight plaintext"><figcaption><span>Vue from "vue";</span><a href="//">引入Vue</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import VueI18n from &quot;vue-i18n&quot;; // 引入国际化的包</span><br><span class="line">import ElementLocale from &#x27;element-ui/lib/locale&#x27;</span><br><span class="line">import enLocale from &#x27;element-ui/lib/locale/lang/en&#x27; //引入el自带得国际化语言包,防止内部插件出现乱码</span><br><span class="line">import zhLocale from &#x27;element-ui/lib/locale/lang/zh-CN&#x27;//引入el自带得国际化语言包,防止内部插件出现乱码</span><br><span class="line">Vue.use(VueI18n); // 全局注册国际化包</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">// 准备翻译的语言环境信息</span><br><span class="line">const i18n = new VueI18n(&#123;</span><br><span class="line">  locale: localStorage.getItem(&#x27;locale&#x27;)||&quot;en&quot;, // 从cookie中获取语言类型 获取不到就是中文</span><br><span class="line">  messages: &#123;</span><br><span class="line">    &#x27;zh&#x27;: Object.assign(require(&#x27;./zh.js&#x27;), zhLocale) ,   // 中文语言包</span><br><span class="line">    &#x27;en&#x27;: Object.assign(require(&#x27;./en.js&#x27;), enLocale)   // 英文语言包</span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line">&#125;); </span><br><span class="line"> </span><br><span class="line">ElementLocale.i18n((key, value) =&gt; i18n.t(key, value))</span><br><span class="line">export default i18n</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="lang文件夹下面建en-js和zh-js文件，语言包内部示例如下"><a href="#lang文件夹下面建en-js和zh-js文件，语言包内部示例如下" class="headerlink" title="lang文件夹下面建en.js和zh.js文件，语言包内部示例如下"></a>lang文件夹下面建en.js和zh.js文件，语言包内部示例如下</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">/**zh.js文件**/</span><br><span class="line">module.exports = &#123;</span><br><span class="line"> menu : &#123;</span><br><span class="line">   home:&quot;首页&quot;</span><br><span class="line"> &#125;,</span><br><span class="line"> content:&#123;</span><br><span class="line">   main:&quot;这里是内容&quot;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**en.js文件**/</span><br><span class="line">module.exports = &#123;</span><br><span class="line"> menu : &#123;</span><br><span class="line">   home:&quot;home&quot;</span><br><span class="line"> &#125;,</span><br><span class="line"> content:&#123;</span><br><span class="line">   main:&quot;this is content&quot;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在main-js中引入vue-i18n并挂在到vue实例上"><a href="#在main-js中引入vue-i18n并挂在到vue实例上" class="headerlink" title="在main.js中引入vue-i18n并挂在到vue实例上"></a>在main.js中引入vue-i18n并挂在到vue实例上</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 国际化</span><br><span class="line">import i18n from &quot;@/lang/index&quot;;</span><br><span class="line">import locale from &#x27;element-ui/lib/locale/lang/en&#x27;</span><br><span class="line">Vue.use(ElementUI,&#123;locale&#125;);</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  i18n,</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">&#125;).$mount(&quot;#app&quot;);</span><br></pre></td></tr></table></figure><h2 id="在页面中使用示例如下"><a href="#在页面中使用示例如下" class="headerlink" title="在页面中使用示例如下"></a>在页面中使用示例如下</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(1)在标签内作为正文内容</span><br><span class="line">&lt;div class=&quot;title&quot;&gt;&#123;&#123;$t(&#x27;menu.home&#x27;)&#125;&#125;&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">(2)作为标签属性使用</span><br><span class="line">&lt;input :placeholder=&quot;$t(&#x27;content.main&#x27;)&quot; type=&quot;text&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="切换语言"><a href="#切换语言" class="headerlink" title="切换语言"></a>切换语言</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">        &lt;el-dropdown szie=&quot;mini&quot; class=&quot;changeLang&quot; @command=&quot;handleCommand&quot;&gt;</span><br><span class="line">          &lt;span&gt;</span><br><span class="line">            切换语言&lt;i class=&quot;el-icon-arrow-down el-icon--right&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">          &lt;el-dropdown-menu slot=&quot;dropdown&quot; &gt;</span><br><span class="line">            &lt;el-dropdown-item command=&quot;en&quot;&gt;English&lt;/el-dropdown-item&gt;</span><br><span class="line">            &lt;el-dropdown-item command=&quot;zh&quot;&gt;中文简体&lt;/el-dropdown-item&gt;</span><br><span class="line">          &lt;/el-dropdown-menu&gt;</span><br><span class="line">        &lt;/el-dropdown&gt;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">methods:&#123;</span><br><span class="line">    // 切换语言</span><br><span class="line">    handleCommand(command) &#123;</span><br><span class="line">      // console.log(command)</span><br><span class="line">      this.$i18n.locale = command;</span><br><span class="line">      localStorage.setItem(&#x27;locale&#x27;,command)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="可能会遇到的问题，Cannot-read-properties-of-undefined-reading-‘install‘-at-Function-Vue-use"><a href="#可能会遇到的问题，Cannot-read-properties-of-undefined-reading-‘install‘-at-Function-Vue-use" class="headerlink" title="可能会遇到的问题，Cannot read properties of undefined (reading ‘install‘) at Function.Vue.use"></a>可能会遇到的问题，Cannot read properties of undefined (reading ‘install‘) at Function.Vue.use</h2><p>报错的原因主要是因为当前使用的版本不匹配，在这里提供一个可行的其中一种方法。<br>下载@8版本的就好</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-i18n@8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> i18n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在小程序中使用svg字体图标</title>
      <link href="/2022/11/15/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8svg%E5%9B%BE%E6%A0%87/"/>
      <url>/2022/11/15/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8svg%E5%9B%BE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1 id="在小程序中使用svg字体图标"><a href="#在小程序中使用svg字体图标" class="headerlink" title="在小程序中使用svg字体图标"></a>在小程序中使用svg字体图标</h1><p>第一步：首先在阿里巴巴矢量图库<a href="https://www.iconfont.cn/search">https://www.iconfont.cn/search</a> 里面下载你想要的小图标：<br><img src="https://pic.imgdb.cn/item/637332a016f2c2beb1166b2e.png"><br><img src="https://pic.imgdb.cn/item/637332a816f2c2beb116743e.png"><br>第二步：打开 <a href="https://icomoon.io/">https://icomoon.io</a> 把你刚刚下载的svg拖拽到这里：<br><img src="https://pic.imgdb.cn/item/637332b316f2c2beb1167e42.png"><br><img src="https://pic.imgdb.cn/item/6373330216f2c2beb116ceb4.png"><br><img src="https://pic.imgdb.cn/item/637332bc16f2c2beb11686f5.png"><br>第三步：在线转换base64编码字体，打开 <a href="https://transfonter.org/">https://transfonter.org/</a> ：<br><img src="https://pic.imgdb.cn/item/637332d116f2c2beb1169d55.png"><br>下载完成后你会得到第二个文件夹，解压：<br><img src="https://pic.imgdb.cn/item/637332c216f2c2beb1168d3f.png"><br>接下来就可以使用了：<br>注意： 字体图标就相当于字体直接用font-size控制大小，color控制颜色就可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// wxml结构文件:&lt;view class=&quot;icon-copy&quot;&gt;&lt;/view&gt;</span><br><span class="line">// wxss样式文件：</span><br><span class="line">.icon-copy &#123;font-size: 30px;color: #000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/637332c716f2c2beb11692aa.png"></p>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）</title>
      <link href="/2022/11/15/%E5%AE%9E%E7%8E%B0%E7%B1%BB%E4%BC%BCkeep-alive%E6%95%88%E6%9E%9C%EF%BC%88%E4%BB%8E%E5%88%97%E8%A1%A8%E9%A1%B5%E8%BF%9B%E5%85%A5%E8%AF%A6%E6%83%85%E9%A1%B5%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%88%97%E8%A1%A8%E9%A1%B5%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BD%8D%E7%BD%AE%E4%B8%8D%E5%8F%98%EF%BC%89/"/>
      <url>/2022/11/15/%E5%AE%9E%E7%8E%B0%E7%B1%BB%E4%BC%BCkeep-alive%E6%95%88%E6%9E%9C%EF%BC%88%E4%BB%8E%E5%88%97%E8%A1%A8%E9%A1%B5%E8%BF%9B%E5%85%A5%E8%AF%A6%E6%83%85%E9%A1%B5%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%88%97%E8%A1%A8%E9%A1%B5%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BD%8D%E7%BD%AE%E4%B8%8D%E5%8F%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="uniapp-实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）"><a href="#uniapp-实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）" class="headerlink" title="uniapp 实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）"></a>uniapp 实现类似keep-alive效果（从列表页进入详情页，返回列表页滚动条位置不变）</h1><p><img src="https://pic.imgdb.cn/item/6373288c16f2c2beb106ef22.png"><br>uniapp的页面生命周期函数onPageScroll可以拿到滚动距离的值</p><h2 id="将列表页滚动的距离scrollTop值-存到data中"><a href="#将列表页滚动的距离scrollTop值-存到data中" class="headerlink" title="将列表页滚动的距离scrollTop值 存到data中"></a>将列表页滚动的距离scrollTop值 存到data中</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onPageScroll : function(e) &#123; </span><br><span class="line">    this.scrollTop = e.scrollTop; </span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="在点击跳转详情的方法中，将scrollTop值存缓存"><a href="#在点击跳转详情的方法中，将scrollTop值存缓存" class="headerlink" title="在点击跳转详情的方法中，将scrollTop值存缓存"></a>在点击跳转详情的方法中，将scrollTop值存缓存</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">toDetail(id) &#123;</span><br><span class="line">   uni.setStorage(&#123;</span><br><span class="line">    key:&quot;listTop&quot;,</span><br><span class="line">    data:this.scrollTop</span><br><span class="line">   &#125;)</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="返回列表页时，在onShow中使用uni-pageScrollTo-将缓存的scrollTop值渲染到页面上。"><a href="#返回列表页时，在onShow中使用uni-pageScrollTo-将缓存的scrollTop值渲染到页面上。" class="headerlink" title="返回列表页时，在onShow中使用uni.pageScrollTo 将缓存的scrollTop值渲染到页面上。"></a>返回列表页时，在onShow中使用uni.pageScrollTo 将缓存的scrollTop值渲染到页面上。</h2><p><img src="https://pic.imgdb.cn/item/6373286f16f2c2beb106c9a9.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">onShow() &#123;</span><br><span class="line">//滚动条</span><br><span class="line">  uni.getStorage(&#123;</span><br><span class="line">     key:&quot;listTop&quot;,</span><br><span class="line">     success: (res) =&gt; &#123;</span><br><span class="line">      if(!isNaN(res.data))&#123;</span><br><span class="line">      var lefts = uni.pageScrollTo(&#123;</span><br><span class="line">        scrollTop:res.data,</span><br><span class="line">        duration:0</span><br><span class="line">      &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="列表页面关闭时将scrollTop值清空"><a href="#列表页面关闭时将scrollTop值清空" class="headerlink" title="列表页面关闭时将scrollTop值清空"></a>列表页面关闭时将scrollTop值清空</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onUnload() &#123;</span><br><span class="line">    uni.setStorage(&#123;</span><br><span class="line">    key:&quot;listTop&quot;,</span><br><span class="line">    data:0</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> uniapp遇见的一些问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo增添公告栏计时器小部件</title>
      <link href="/2022/11/11/Hexo%E5%A2%9E%E6%B7%BB%E5%85%AC%E5%91%8A%E6%A0%8F%E8%AE%A1%E6%97%B6%E5%99%A8%E5%B0%8F%E9%83%A8%E4%BB%B6/"/>
      <url>/2022/11/11/Hexo%E5%A2%9E%E6%B7%BB%E5%85%AC%E5%91%8A%E6%A0%8F%E8%AE%A1%E6%97%B6%E5%99%A8%E5%B0%8F%E9%83%A8%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo增添公告栏计时器小部件"><a href="#Hexo增添公告栏计时器小部件" class="headerlink" title="Hexo增添公告栏计时器小部件"></a>Hexo增添公告栏计时器小部件</h1><p>本问将介绍如何在公告栏增加计时器小部件，效果如下图所示：<br>    <img src="https://pic1.imgdb.cn/item/636df3d616f2c2beb1b049e5.jpg"></p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>在\source\js目录下创建一个timing.js文件，并将如下代码写入该文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">let oSpan = document.getElementsByTagName(&quot;timing&quot;)[0];</span><br><span class="line">let localhostTime = new Date();//获取页面打开的时间</span><br><span class="line">function tow(n) &#123;</span><br><span class="line">    return n &gt;= 0 &amp;&amp; n &lt; 10 ? &#x27;0&#x27; + n : &#x27;&#x27; + n;</span><br><span class="line">&#125;</span><br><span class="line">setInterval(function () &#123;</span><br><span class="line">    let goTime = new Date();//获取动态时间</span><br><span class="line">    let diffTime = goTime.getTime() - localhostTime.getTime();</span><br><span class="line">    var second = Math.floor(diffTime / 1000);//未来时间距离现在的秒数</span><br><span class="line">    var day = Math.floor(second / 86400);//整数部分代表的是天；一天有24*60*60=86400秒 ；</span><br><span class="line">    second = second % 86400;//余数代表剩下的秒数；</span><br><span class="line">    var hour = Math.floor(second / 3600);//整数部分代表小时；</span><br><span class="line">    second %= 3600; //余数代表 剩下的秒数；</span><br><span class="line">    var minute = Math.floor(second / 60);</span><br><span class="line">    second %= 60;</span><br><span class="line">    // var str = tow(day) + &#x27;&lt;span class=&quot;time&quot;&gt;天&lt;/span&gt;&#x27;</span><br><span class="line">    //     + tow(hour) + &#x27;&lt;span class=&quot;time&quot;&gt;小时&lt;/span&gt;&#x27;</span><br><span class="line">    //     + tow(minute) + &#x27;&lt;span class=&quot;time&quot;&gt;分钟&lt;/span&gt;&#x27;</span><br><span class="line">    //     + tow(second) + &#x27;&lt;span class=&quot;time&quot;&gt;秒&lt;/span&gt;&#x27;;</span><br><span class="line">    var str = tow(hour) + &#x27;&lt;span class=&quot;time&quot;&gt;小时&lt;/span&gt;&#x27;</span><br><span class="line">        + tow(minute) + &#x27;&lt;span class=&quot;time&quot;&gt;分钟&lt;/span&gt;&#x27;</span><br><span class="line">        + tow(second) + &#x27;&lt;span class=&quot;time&quot;&gt;秒&lt;/span&gt;&#x27;;</span><br><span class="line">    oSpan.innerHTML = &quot;您已浏览网页&quot; + str;</span><br><span class="line">&#125;, 1000)</span><br></pre></td></tr></table></figure><p>找到主题配置文件_config.butterfly.yml，在inject的bottom处引入该js文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bottom:</span><br><span class="line">- &lt;script src=&quot;/js/timing.js&quot;&gt;&lt;/script&gt; # 公告栏计时器插件</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重新部署，启动，就可以看到效果啦</p>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决hexo开启懒加载后图片无法立即显示的问题</title>
      <link href="/2022/11/11/%E8%A7%A3%E5%86%B3hexo%E5%BC%80%E5%90%AF%E6%87%92%E5%8A%A0%E8%BD%BD%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E7%AB%8B%E5%8D%B3%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/11/11/%E8%A7%A3%E5%86%B3hexo%E5%BC%80%E5%90%AF%E6%87%92%E5%8A%A0%E8%BD%BD%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E7%AB%8B%E5%8D%B3%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="解决了hexo开启懒加载后图片无法立即显示的问题"><a href="#解决了hexo开启懒加载后图片无法立即显示的问题" class="headerlink" title="解决了hexo开启懒加载后图片无法立即显示的问题"></a>解决了hexo开启懒加载后图片无法立即显示的问题</h1><p>本文主要介绍hexo-lazyload-image插件引发的bug以及相关API</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>最近在折腾hexo搭建的个人主页 的时候，遇到了这样一个 bug：</p><p>网站开启图片懒加载后，首次加载页面图片不显示，但是刷新一次后会显示。</p><p>我的插件版本是：hexo-lazyload-image 。</p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>笔者为了提升网页的浏览体验，开启了pjax优化，其原理在于pjax封装了ajax实现局部刷新，将网站变成了单页面应用。</p><p>懒加载插件如果配置不当，将与pjax插件发生冲突，导致以上bug。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>找到hexo项目的根目录下的站点配置文件_config.yml，具体路径：blog&#x2F;_config.yml，其中blog是你的项目文件夹。</p><p>找到lazyload配置，添上isSPA: true字段即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: true</span><br><span class="line">  onlypost: false # optional</span><br><span class="line">  loadingImg: # optional eg ./images/loading.gif</span><br><span class="line">  isSPA: true # optional</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>onlypost<br>   true：只有路由页面或者文章的图片才会被懒加载。<br>   false：除了站点背景图（如果有的话），整个站点的图片均会被懒加载。</li><li>loadingImg：指定的话，加载自定义路径的图片用作文章图片加载时显示，不指定的话显示默认图片。</li><li>isSPA<br>  true：针对单页面应用，当滚动条滚动到图片位置时就会向后端请求图片<br>   false：刷新才能请求图片</li><li>preloadRatio：在多少倍的可见区域时触发图片请求，默认为1，即当前屏幕的区域。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Qexo - 一个快速、强大、漂亮的在线 Hexo 编辑器</title>
      <link href="/2022/11/11/qexo-use/"/>
      <url>/2022/11/11/qexo-use/</url>
      
        <content type="html"><![CDATA[<h1 id="第一次使用markdown"><a href="#第一次使用markdown" class="headerlink" title="第一次使用markdown"></a>第一次使用markdown</h1><p>Qexo 是一个快速、强大、漂亮的在线 Hexo 编辑器</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>Github 开源仓库：<a href="https://github.com/am-abudu/Qexo">https://github.com/am-abudu/Qexo</a><br>Wiki：<a href="https://github.com/am-abudu/Qexo/wiki">https://github.com/am-abudu/Qexo/wiki</a></p><h2 id="特色功能"><a href="#特色功能" class="headerlink" title="特色功能"></a>特色功能</h2><ul><li>自定义图床上传图片</li><li>在线配置编辑</li><li>在线文章管理</li><li>在线页面管理</li><li>较为完善的缓存功能</li><li>Webhook 清除缓存</li><li>自动检查更新</li><li>实验性的在线更新</li><li>开放的 API</li></ul><h2 id="无服务器部署"><a href="#无服务器部署" class="headerlink" title="无服务器部署"></a>无服务器部署</h2><h3 id="申请-MongoDB"><a href="#申请-MongoDB" class="headerlink" title="申请 MongoDB"></a>申请 MongoDB</h3><p>注册 MongoDB 账号 创建免费 MongoDB 数据库，区域推荐选择 AWS &#x2F; N.<br>Virginia (us-east-1) 在 Clusters 页面点击 CONNECT，按步骤设置允许所有 IP 地址的连接），创建数据库用户，并记录数据库连接信息，密码即为你所设置的值<br><img src="https://bu.dusays.com/2021/11/09/6fd9e2a69e8bc.png"></p><h3 id="Fork-本项目"><a href="#Fork-本项目" class="headerlink" title="Fork 本项目"></a>Fork 本项目</h3><p>打开 qexo项目主页 点击 Fork 将项目复刻到您的账户下</p><h3 id="创建-Vercel-项目"><a href="#创建-Vercel-项目" class="headerlink" title="创建 Vercel 项目"></a>创建 Vercel 项目</h3><p>打开 Vercel 注册账号并绑定 Github 新建一个项目并绑定 Fork 的仓库</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>在项目部署界面添加环境变量 Environment Variables</p><p>点击 Deploy 开始部署，若没有 Error 信息即可打开域名进入初始化引导</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="什么是-API-密钥"><a href="#什么是-API-密钥" class="headerlink" title="什么是 API 密钥"></a>什么是 API 密钥</h3><p>在您完成初始化之后可在设置界面修改&#x2F;创建 API 密钥，用于 Webhook 中的身份验证。若留空系统会随机生成一个 API 密钥</p><h3 id="Webhook-是什么"><a href="#Webhook-是什么" class="headerlink" title="Webhook 是什么"></a>Webhook 是什么</h3><p>Qexo 中的 Webhook 指 &#x2F;api&#x2F;webhook 用于自动化操作，目前可用于自动清除缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Ace</span><br><span class="line">Argon-Dashboard-Django</span><br><span class="line">Bootstrap</span><br><span class="line">Bootstrap-Notify</span><br><span class="line">Django</span><br><span class="line">Djongo</span><br><span class="line">HexoPlusPlus</span><br><span class="line">jQuery</span><br><span class="line">Vercel-Python-WSGI</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/01/hello-world/"/>
      <url>/2022/11/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
